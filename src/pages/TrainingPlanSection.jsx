import React from 'react';

// trainingPlan –≤–µ—á–µ –µ –æ–±–µ–∫—Ç TrainingPlanDTO, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–∞—Å–∏–≤ –æ—Ç —Å—Ç—Ä–∏–Ω–≥–æ–≤–µ
export default function TrainingPlanSection({ trainingPlan }) {
  if (!trainingPlan || !trainingPlan.trainingSessions || trainingPlan.trainingSessions.length === 0) {
    return null; // –í—Ä—ä—â–∞–º–µ null, –∞–∫–æ –Ω—è–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤—ä—á–µ–Ω –ø–ª–∞–Ω –∏–ª–∏ —Å–µ—Å–∏–∏
  }

  return (
    <section className="mt-8 bg-white p-6 rounded-lg shadow-md">
      <h2 className="text-2xl font-bold mb-4 text-gray-800">üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤—ä—á–µ–Ω –ø–ª–∞–Ω</h2>

      {/* –û–±—â–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø–ª–∞–Ω–∞ */}
      <div className="mb-6 border-b pb-4">
        <p className="text-lg text-gray-700">
          <strong>–î–Ω–∏ –≤ —Å–µ–¥–º–∏—Ü–∞—Ç–∞:</strong> {trainingPlan.daysPerWeek || '–ù–µ—É—Ç–æ—á–Ω–µ–Ω–∏'}
        </p>
        <p className="text-lg text-gray-700">
          <strong>–°—Ä–µ–¥–Ω–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç:</strong> {trainingPlan.durationMinutes || '–ù–µ—É—Ç–æ—á–Ω–µ–Ω–∏'} –º–∏–Ω—É—Ç–∏ –Ω–∞ —Å–µ—Å–∏—è
        </p>
        <p className="text-sm text-gray-500 mt-2">
          –ü–ª–∞–Ω, –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω –Ω–∞: {trainingPlan.dateGenerated ? new Date(trainingPlan.dateGenerated).toLocaleDateString('bg-BG') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ –¥–∞—Ç–∞'}
        </p>
      </div>

      {/* –ò—Ç–µ—Ä–∏—Ä–∞–º–µ –ø—Ä–µ–∑ TrainingSessionDTOs */}
      {trainingPlan.trainingSessions
        .sort((a, b) => a.dayOfWeek.localeCompare(b.dayOfWeek)) // –°–æ—Ä—Ç–∏—Ä–∞–º–µ –ø–æ –¥–µ–Ω –æ—Ç —Å–µ–¥–º–∏—Ü–∞—Ç–∞, –∞–∫–æ –µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        .map((session, sessionIndex) => (
        <div key={session.id || sessionIndex} className="mb-6 p-4 border rounded-md bg-gray-50 last:mb-0">
          <h3 className="text-xl font-semibold text-blue-700 mb-3">
            üóìÔ∏è {session.dayOfWeek ? session.dayOfWeek.charAt(0).toUpperCase() + session.dayOfWeek.slice(1).toLowerCase() : '–ù–µ—É—Ç–æ—á–Ω–µ–Ω –¥–µ–Ω'}
            <span className="text-gray-600 text-base ml-2">({session.durationMinutes} –º–∏–Ω.)</span>
          </h3>
          {session.exercises && session.exercises.length > 0 ? (
            <ul className="list-disc ml-6 space-y-2 text-gray-700">
              {/* –ò—Ç–µ—Ä–∏—Ä–∞–º–µ –ø—Ä–µ–∑ ExerciseDTOs */}
              {session.exercises.map((exercise, exerciseIndex) => (
                <li key={exercise.id || exerciseIndex} className="text-base leading-relaxed">
                  <strong>{exercise.name}</strong> - {exercise.description} ({exercise.sets} —Å–µ—Ä–∏–∏ –ø–æ {exercise.reps} –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è)
                  {exercise.durationMinutes > 0 && ` (${exercise.durationMinutes} –º–∏–Ω.)`}
                  {exercise.difficultyLevel && <span className="ml-2 text-sm text-gray-500">[{exercise.difficultyLevel}]</span>}
                </li>
              ))}
            </ul>
          ) : (
            <p className="text-gray-500 italic">–ù—è–º–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∑–∞ —Ç–∞–∑–∏ —Å–µ—Å–∏—è.</p>
          )}
        </div>
      ))}
    </section>
  );
}